[bot]
prefixes = ["t!", "!!"]
description = """The TSP login andcommunity discord bot"""
playing = "TÃ©lÃ©com SudParis"
commands_are_case_insensitive = true

[database]
# A postgreSQL database to store information about users, channels, and guilds
# Please ensure the database exist before loading the database modules
# Quick Start : https://medium.com/coding-blocks/creating-user-database-and-adding-access-on-postgresql-8bfcd2f4a91e
enable = true
host = "127.0.0.1"
port = "5432"
user = "mybot"
password = "mybot"
database = "tsp"

[permissions.default]
# Permissions work on a inheritance basis
# First, default permissions here are applied. They usually deny almost everything but the base functions of the bot.
# Then, Guild permissions are applied and remplace some default permisions. After that, special member permissions are
# applied. Finally, Fixed permissions below are applied to prevent giving too much rights (like bot.administrator) in a
# server or a memeber config. Then, if there are some, user permissions are applied and are allowed to override anything.
# They are set by the bot admins, in the db.
# Once the permissions are calculated, they are applied from precise to imprecise (wildcards).
# For example, suppose the bot is checking for a.b.c, and the user has a.* allowed, a.b.* denied, and a.b.c allowed,
# the permission is granted by a.b.c since it's the most specific of all.
# WARNING : Ensure that all permissions names are lowercased.
# Dont forget that each command have, by default and unless another check exists, a permission going by the form
# CogName.command_name. As you might see in [permissions.fixed], they are by default evaluted to false. So if you want
# to make them by-default accessible to anyone, you have to give that permission (or a lower wildcard) here.
"server.ignored" = false
"simplecommands.*" = true
"databasecommands.*" = true
"permissionscommands.*" = true

[permissions.fixed]
# We need to deny that one to everyone, because by default there is no permissions granted
"*" = false

# Bot permissions are special and must not be overridden
# "Just in case"
"bot.*" = false

# These need to be overriden "per-user" in the database.
"bot.bypass_cooldowns" = false
"bot.ignored"         = false
"bot.administrator"    = false


[auth.discord]
# Your bot token. You can find it on the Bot page of the Developper portal
token = ""

[cogs]
# Names of cogs to load. Usually cogs.file_name_without_py
cogs_to_load = ['jishaku', 'cogs.error_handling', 'cogs.simple_commands', 'cogs.background_loop',  'cogs.database_commands', 'cogs.permissions_commands', 'cogs.authentication', 'cogs.web', 'cogs.bonjour']

[cogs.Authentication]
check_login_url = "https://choix.telecom-sudparis.eu/check_login"  # Hummm, une backdoor pour le LDAP. J'adore.
profile_picture_url = "https://choix.telecom-sudparis.eu/photo/{login}"  # Hummm, une autre backdoor pour le LDAP. J'adore aussi. Le trombi ne marche pas.
reaction_channel_id = 744968789086699582
begin_login_emoji_id = 744969309570465832

[cogs.Authentication.roles_mapping]
visiteur = 744971746402107462
etudiant = 744970423703437352
personnel = 744970469177950241

FISE = 745006093016760321
FIPA = 745006143499403375
IMTBS = 745237797782421534

1A = 745007158965436556
2A = 745007176602353805
3A = 745007188749058130
4A = 745007200069746745

[cogs.Web]
host = '0.0.0.0'
port = 8080

cas_server_url = "https://cas.imtbs-tsp.eu/cas/"
cas_service_url = "https://etudiants.telecom-sudparis.eu/login"

official_invite = "https://discord.gg/4fQnkhr"


[cogs.Bonjour]
emoji_hello = "ðŸ‘‹"